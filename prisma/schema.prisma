// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// model tuteur {
//   id_Us     Int     @id @default(autoincrement())
//   nom       String
//   postnom   String
//   email     String  @unique
//   password  String 
//   telephone Int     @unique
//   eleves    Eleve[] 
// }

// model Eleve {
//   id_El     Int     @id @default(autoincrement())
//   nom       String
//   postnom   String
//   prenom    String
//   sexe      String 
//   adresse   String
//   email     String  @unique
//   telephone Int     @unique
//   classe    String
//   usId      Int     
//   users     tuteur    @relation(fields: [usId], references: [id_Us])
// }

// Modèle Tuteur
model User {
  id_Us     Int     @id @default(autoincrement())
  nom       String
  postnom   String
  email     String  @unique
  password  String 
  telephone Int     @unique
  eleves    Eleve[] // Relation un-à-plusieurs avec Eleve
}

// Modèle Eleve
model Eleve {
  id_El     Int     @id @default(autoincrement())
  nom       String
  postnom   String
  prenom    String
  sexe      String 
  adresse   String
  email     String  @unique
  telephone Int    
  classe    String
  usId      Int?    // Clé étrangère optionnelle pour lier un tuteur
  tuteur    User? @relation(fields: [usId], references: [id_Us])
  presences   Presence[]
  sorties     Sortie[]
  communiques Communique[]
  notifications Notification[]
}
// Définition du modèle Presence
model Presence {
  id          Int      @id @default(autoincrement())
  date        DateTime
  etat        String
  eleveId     Int
  eleve       Eleve    @relation(fields: [eleveId], references: [id_El])
}

// Définition du modèle Sortie
model Sortie {
  id          Int      @id @default(autoincrement())
  date        DateTime
  raison      String
  eleveId     Int
  eleve       Eleve    @relation(fields: [eleveId], references: [id_El])
}

// Définition du modèle Communique
model Communique {
  id          Int      @id @default(autoincrement())
  date        DateTime
  texte       String
  eleveId     Int
  eleve       Eleve    @relation(fields: [eleveId], references: [id_El])
}

// Définition du modèle Notification
model Notification {
  id          Int      @id @default(autoincrement())
  date        DateTime
  message     String
  eleveId     Int
  eleve       Eleve    @relation(fields: [eleveId], references: [id_El])
}


